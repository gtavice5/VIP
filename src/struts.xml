<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
	"http://struts.apache.org/dtds/struts-2.5.dtd">

<!-- START SNIPPET: xworkSample -->
<struts>
	<!-- 国际化 -->
	<constant name="struts.custom.i18n.resources" value="message"></constant>
	<!-- 配置WEB默认编码集，相当于HttpServletRequest.setCharacterEncoding的用法 -->
	<constant name="struts.i18n.encoding" value="UTF-8"></constant>
	<!-- 默认我们Struts的请求后缀是.action,加了以后.action和.do都可以 -->
	<constant name="struts.action.extention" value="action,do"></constant>
	<!-- 设置浏览器是否缓存静态内容，默认值为true,在我们开发阶段建议关闭，防止修改后测试不到 -->
	<constant name="struts.serve.static.browserCache" value="false"></constant>
	<!-- 当struts配置文件修改后，系统是否自动重新加载该文件，默认为false -->
	<constant name="struts.configuration.xml.reload" value="true"></constant>
	<!-- 开发模式下使用,这样可以打印出更加详细的错误信息 -->
	<constant name="struts.devMode" value="true"></constant>
	<!-- 默认视图主题 -->
	<!-- <constant name="struts.ui.theme" value="simple"></constant> -->
	<!-- <constant name="struts.ui.templateDir" value="template"></constant> -->
	<!-- <constant name="struts.ui.templateSuffix" value="ftl"></constant> -->
	<!-- name属性：包名，用于被别的包调用或继承 extends:继承哪个包，会继承该包下配置信息和拦截器等等 namespace:选填，url连接必须加入/new/action.xxx -->
	<package name="default" extends="struts-default">
		<interceptors>
			<interceptor name="logininter" class="com.jkxy.util.logininter"></interceptor> 
			<interceptor-stack name="loginstack">
				<interceptor-ref name="defaultStack"></interceptor-ref>
				<interceptor-ref name="logininter"></interceptor-ref>
			</interceptor-stack>
		</interceptors>
		
		<!-- 定义全局Result -->  
        <global-results>  
            <!-- 当返回login视图名时，转入/login.jsp页面 -->  
            <result name="login">/login.jsp</result>  
        </global-results>  

		<action name="checkUser" class="userAction" method="checkUser">
			<result name="success">/main.jsp</result>
			<result name="error">/login.jsp</result>
			<interceptor-ref name="defaultStack"></interceptor-ref>
		</action>

		<action name="logOut" class="userAction" method="logOut">
			<result name="success">/login.jsp</result>
			<interceptor-ref name="loginstack"></interceptor-ref>
		</action>

		<action name="grantUser" class="userAction" method="grantUser">
			<result name="success">/systemM.jsp</result>
			<interceptor-ref name="loginstack"></interceptor-ref>
		</action>

		<action name="removeUser" class="userAction" method="removeUser">
			<result name="success">/systemM.jsp</result>
			<interceptor-ref name="loginstack"></interceptor-ref>
		</action>

		<action name="addCommodity" class="commodityAction" method="addCommodity">
			<result name="success">/addCommodity.jsp</result>
			<result name="input">/addCommodity.jsp</result>
			<interceptor-ref name="loginstack"></interceptor-ref>
		</action>

		<action name="getCommodityById" class="commodityAction" method="getCommodityById">
			<result>/getCommodityById.jsp</result>
			<result name="input">/getCommodityById.jsp</result>
			<interceptor-ref name="loginstack"></interceptor-ref>
		</action>

		<action name="addConsume" class="consumeAction" method="addConsume">
			<result name="success">/addConsume.jsp</result>
			<result name="input">/addConsume.jsp</result>
			<interceptor-ref name="loginstack"></interceptor-ref>
		</action>

		<action name="browseConsumePaging" class="consumeAction"
			method="browseConsumePaging">
			<result>/browseConsumePaging.jsp</result>
			<interceptor-ref name="loginstack"></interceptor-ref>
		</action>

		<action name="addVip" class="vipAction" method="addVip">
			<result name="success">/addVip.jsp</result>
			<result name="input">/addVip.jsp</result>
			<interceptor-ref name="loginstack"></interceptor-ref>
		</action>

		<action name="getVipById" class="vipAction" method="getVipById">
			<result>/getVipById.jsp</result>
			<result name="input">/getVipById.jsp</result>
			<interceptor-ref name="loginstack"></interceptor-ref>
		</action>

	</package>
</struts>

<!-- END SNIPPET: xworkSample -->

